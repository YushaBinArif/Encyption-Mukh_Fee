/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalencryption;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javafx.stage.FileChooser.ExtensionFilter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Yousha Arif
 */
public class Form extends javax.swing.JFrame {
    //Declarations
    static JFileChooser fileChooser = new JFileChooser();
    static JFileChooser decryptFileChooser;
    static PrintWriter outFile ;
    static String path ;
    static File aFile,newFile,encryptFile ;
    static String textForTextArea= "";
    static double [] LETTER  = new double[1000];
    static String TEMP ;
    static String fileParentPath ;
    private static Scanner inFile;
    /**
     * Creates new form Form
     */
    public Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addFileLabel = new javax.swing.JLabel();
        decryptFileLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        encryptFileLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        addFileLabel.setBackground(new java.awt.Color(255, 255, 255));
        addFileLabel.setForeground(new java.awt.Color(153, 0, 0));
        addFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addFileLabel.setText("+");
        addFileLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFileLabelMouseClicked(evt);
            }
        });
        jPanel1.add(addFileLabel);
        addFileLabel.setBounds(54, 20, 52, 42);

        decryptFileLabel.setBackground(new java.awt.Color(153, 153, 153));
        decryptFileLabel.setText("{ }");
        decryptFileLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                decryptFileLabelMouseClicked(evt);
            }
        });
        jPanel1.add(decryptFileLabel);
        decryptFileLabel.setBounds(139, 20, 50, 42);

        jLabel4.setText("Algo");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(207, 22, 51, 38);

        jLabel5.setText("Settings");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(276, 23, 46, 36);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 80, 400, 160);

        encryptFileLabel.setText("Encrypt");
        encryptFileLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encryptFileLabelMouseClicked(evt);
            }
        });
        jPanel1.add(encryptFileLabel);
        encryptFileLabel.setBounds(360, 260, 80, 30);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFileLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFileLabelMouseClicked
         fileChooser.setFileFilter(new FileNameExtensionFilter("*.txt","txt"));
         fileChooser.showOpenDialog(null);
         aFile = fileChooser.getSelectedFile();
         path = aFile.getAbsolutePath();
         
         try 
        {
            jTextArea1.setText(addFileMethod(path));    
        }
        catch (FileNotFoundException ex) 
        {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        //For Deleting That File
       // String parentpath = aFile.getParent();
       //String fileName = aFile.getName();
       // aFile.delete();
      /*  StringBuilder sbFileName = new StringBuilder(fileName);
        sbFileName.replace(fileName.indexOf("."),fileName.length(), "");
       
         File newFile = new File(parentpath, new String(sbFileName+".enc"));
        try {
            newFile.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        aFile.delete();
       */
    }//GEN-LAST:event_addFileLabelMouseClicked

    private void encryptFileLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encryptFileLabelMouseClicked
      /*   //For Deleting That File
         String parentpath = aFile.getParent(); //File Dir
         String fileName = aFile.getName();     //fileName.xyz
        StringBuilder sbFileName = new StringBuilder(fileName); // for removing extension
        sbFileName.replace(fileName.indexOf("."),fileName.length(), ""); //.......still removing
       
          newFile = new File(parentpath, new String(sbFileName+".enc")); //creating encrypted File
        try {
            newFile.createNewFile(); 
        } catch (IOException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        aFile.delete(); // deleting old File
       */
        
        try {
            
            jTextArea1.setText("");
            encryptMethod(textForTextArea, path);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(rootPane, "Data Successfully encrypted");
    }//GEN-LAST:event_encryptFileLabelMouseClicked
    //encrypt the text (Encrypt label click event)
    private void decryptFileLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decryptFileLabelMouseClicked
       // add a file chooser here
       decryptFileChooser = new JFileChooser();
       decryptFileChooser.setFileFilter(new FileNameExtensionFilter("(*.enc) Encrypted Files", "enc"));
       decryptFileChooser.showOpenDialog(null);
       encryptFile = decryptFileChooser.getSelectedFile();
        try {
            jTextArea1.setText(decryptMethod(encryptFile.getAbsolutePath()));
       } catch (FileNotFoundException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        
    }//GEN-LAST:event_decryptFileLabelMouseClicked
    } // display decrypted text from decrypMethod
    /**
     * @param args the command line arguments
     * @return 
     */
    public static String addFileMethod(String path) throws FileNotFoundException // it reads file and display it on textArea
    {
        Scanner inFile = new Scanner(new FileReader(path));
        
        while(inFile.hasNext())
        {
          textForTextArea += inFile.next()+" ";
        }
       inFile.close();
       
       return textForTextArea;
    }
    public static void encryptMethod(String textToEncrypt,String path) throws FileNotFoundException
    {
        outFile = new PrintWriter(path);
        TEMP = textToEncrypt; 
       
         for (int i = 0; i < TEMP.length() ; i++) 
         {
            
               LETTER[i] = (int)TEMP.charAt(i) ;
       
              int randomNumber = (int)(Math.random()*10+1);
       
              LETTER[i] =  Math.pow(LETTER[i],randomNumber);
       
              outFile.println(LETTER[i]+"?"+randomNumber+"");
          
        }
       outFile.close();
       
    }
    public static String decryptMethod(String pathOfFileToBeDecrypted) throws FileNotFoundException
    {
       inFile = new Scanner(new FileReader(pathOfFileToBeDecrypted));;
       String LETTER = "" ;
       String DECRYPTED_LETTER = "";
       int i ;
           while(inFile.hasNext())
        {
       LETTER = inFile.next();//1245?8
       int indexOfN = LETTER.indexOf("?") ;
       int n = Integer.parseInt(LETTER.substring(indexOfN+1)) ;
       float valueOfN = (float) (1.0/n);
       double orgLETTER = Double.parseDouble(LETTER.substring(0,indexOfN));
       int neworgLETTER  =(int)Math.pow(orgLETTER,valueOfN);
       DECRYPTED_LETTER += (char)neworgLETTER;
       
       //jTextField1.setText(DECRYPTED_LETTER.replaceFirst("null", ""));
      }
      return DECRYPTED_LETTER;     
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addFileLabel;
    private javax.swing.JLabel decryptFileLabel;
    private javax.swing.JLabel encryptFileLabel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
